name: publish to nuget
on:
  push:
    branches:
      - main # Default release branch
jobs:
  publish:
    name: build, pack & publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
#       - name: Test
#         run: dotnet test --no-build --verbosity normal
      # Publish
      - name: publish on version change
        id: publish_nuget
        uses: rohith/publish-nuget@v2
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: src/kr.bbon.AspNetCore/kr.bbon.AspNetCore.csproj
          
          # NuGet package id, used for version detection & defaults to project name
          # PACKAGE_NAME: Core
          
          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          # VERSION_STATIC: 1.0.0

          # Flag to toggle git tagging, enabled by default
          # TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          # NUGET_SOURCE: https://api.nuget.org

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          # INCLUDE_SYMBOLS: false
      - name: package-version
        run: grep '<Version>' < src/kr.bbon.AspNetCore/kr.bbon.AspNetCore.csproj | echo "::set-output name=version::$(sed 's/.*<Version>\(.*\)<\/Version>/\1/')"
        id: get_package_version
      - name: set-version  
        run: echo "PACKAGE_VERSION=${{ steps.get_package_version.outputs.version }}" >> $GITHUB_ENV
#       - name: package-version-to-git-tag
#         uses: pkgdeps/git-tag-action@v2
#         with:
#           github_token: ${{ secrets.GH_TOKEN }}
#           github_repo: ${{ github.repository }}
#           version: ${{ env.PACKAGE_VERSION }}
#           git_commit_sha: ${{ github.sha }}
#           git_tag_prefix: "v"
      - name: Release Drafter
        id: release_drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          version: ${{ env.PACKAGE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
